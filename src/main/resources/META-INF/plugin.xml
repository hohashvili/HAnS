<!--
Copyright [2021] [Herman Jansson & Johan Martinson]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<idea-plugin>
    <id>${PLUGIN_ID}</id>
    <name>HAnS: Helping Annotate Software</name>
    <vendor email="johan.t.martinson+HAnS@gmail.com" url="https://bitbucket.org/easelab/hans-text/">Johan Martinson and Herman Jansson</vendor>

    <description><![CDATA[
    Providing support for editing embedded feature annotations
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <!--<depends>com.intellij.modules.java</depends>-->

    <!-- &begin[ColorSettingsPage] -->
    <extensions defaultExtensionNs="com.intellij">
        <colorSettingsPage implementation="se.ch.HAnS.syntaxHighlighting.HansColorSettingsPage"/>
    </extensions>
    <!-- &end[ColorSettingsPage] -->

    <extensions defaultExtensionNs="com.intellij">
        <psi.treeChangeListener implementation="se.ch.HAnS.timeTool.CustomDocumentListener"/>

        <!-- &begin[HAnS::FeatureModel] -->
        <fileType name="Feature Model File" implementationClass="se.ch.HAnS.featureModel.FeatureModelFileType"
                  fieldName="INSTANCE" language="FeatureModel" extensions="feature-model"/>
        <lang.parserDefinition language="FeatureModel"
                               implementationClass="se.ch.HAnS.featureModel.FeatureModelParserDefinition"/>
        <!-- &end[HAnS::FeatureModel] -->

        <!-- &begin[HAnS::FileAnnotation] -->
        <fileType name="File Annotation File" implementationClass="se.ch.HAnS.fileAnnotation.FileAnnotationFileType"
                  fieldName="INSTANCE" language="FileAnnotation" extensions="feature-to-file"/>
        <lang.parserDefinition language="FileAnnotation"
                                implementationClass="se.ch.HAnS.fileAnnotation.FileAnnotationParserDefinition"/>
        <!-- &end[HAnS::FileAnnotation] -->

        <!-- &begin[HAnS::FolderAnnotation] -->
        <fileType name="Feature To Folder File" implementationClass="se.ch.HAnS.folderAnnotation.FolderAnnotationFileType"
                  fieldName="INSTANCE" language="FolderAnnotation" extensions="feature-to-folder"/>
        <lang.parserDefinition language="FolderAnnotation"
                               implementationClass="se.ch.HAnS.folderAnnotation.FolderAnnotationParserDefinition"/>
        <!-- &end[HAnS::FolderAnnotation] -->

        <!-- &begin[HAnS::CodeAnnotation] -->
        <fileType name="Code Annotation File" implementationClass="se.ch.HAnS.codeAnnotation.CodeAnnotationFileType"
                  fieldName="INSTANCE" language="CodeAnnotations" extensions="code-annotation"/>
        <lang.parserDefinition language="CodeAnnotations"
                               implementationClass="se.ch.HAnS.codeAnnotation.CodeAnnotationParserDefinition"/>
        <!-- &end[HAnS::CodeAnnotation] -->

        <!-- &begin[CodeCompletion] -->
        <completion.contributor language="any"
                                implementationClass="se.ch.HAnS.codeCompletion.FileCompletionContributor"/>
        <!-- &end[CodeCompletion] -->

        <!-- &begin[SyntaxHighlighting] -->
        <!-- &begin[SyntaxHighlighting::FeatureModel] -->
        <lang.syntaxHighlighterFactory language="FeatureModel"
                                       implementationClass="se.ch.HAnS.syntaxHighlighting.featureModel.FeatureModelSyntaxHighlighterFactory"/>
        <annotator language="FeatureModel"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.featureModel.FeatureModelAnnotator"/>
        <!-- &end[SyntaxHighlighting::FeatureModel] -->

        <!-- &begin[SyntaxHighlighting::FolderAnnotation] -->
        <lang.syntaxHighlighterFactory language="FolderAnnotation" implementationClass="se.ch.HAnS.syntaxHighlighting.folderAnnotations.FolderAnnotationSyntaxHighlighterFactory"/>
        <annotator language="FolderAnnotation"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.folderAnnotations.FolderAnnotationAnnotator"/>
        <!-- &end[SyntaxHighlighting::FolderAnnotation] -->

        <!-- &begin[SyntaxHighlighting::FileAnnotation] -->
        <lang.syntaxHighlighterFactory language="FileAnnotation" implementationClass="se.ch.HAnS.syntaxHighlighting.fileAnnotations.FileAnnotationSyntaxHighlighterFactory"/> <!-- &line[SyntaxHighlighting::FileAnnotation]-->
        <annotator language="FileAnnotation"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.fileAnnotations.FileAnnotationAnnotator"/>
        <!-- &end[SyntaxHighlighting::FileAnnotation] -->

        <!-- &begin[SyntaxHighlighting::CodeAnnotation] -->
        <lang.syntaxHighlighterFactory language="CodeAnnotations" implementationClass="se.ch.HAnS.syntaxHighlighting.codeAnnotations.CodeAnnotationsSyntaxHighlighterFactory"/> <!-- &line[SyntaxHighlighting::CodeAnnotation]-->
        <annotator language="CodeAnnotations"
                   implementationClass="se.ch.HAnS.syntaxHighlighting.codeAnnotations.CodeAnnotationAnnotator"/>
        <!-- &end[SyntaxHighlighting::CodeAnnotation] -->

        <additionalTextAttributes scheme="Darcula" file="colorSchemes/HAnSDarcula.xml"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/HAnSDefault.xml"/>
        <!-- &end[SyntaxHighlighting] -->

        <!-- &begin[Injection] -->
        <multiHostInjector implementation="se.ch.HAnS.codeAnnotation.CodeAnnotationInjector"/>
        <!-- &end[Injection] -->

        <!-- &begin[FeatureView] -->
        <toolWindow id="Feature Model View" secondary="true" anchor="left"
                    factoryClass="se.ch.HAnS.featureView.FeatureViewFactory"/>
        <!-- &end[FeatureView] -->

        <!-- &begin[Referencing] -->
        <psi.referenceContributor implementation="se.ch.HAnS.referencing.FeatureReferenceContributor" language=""/>
        <lang.findUsagesProvider language="FeatureModel"
                                 implementationClass="se.ch.HAnS.referencing.FeatureFindUsagesProvider"/>
        <useScopeEnlarger implementation="se.ch.HAnS.FeatureAnnotationScopeEnlarger"/>
        <psi.referenceContributor implementation="se.ch.HAnS.referencing.FileReferenceContributor" language=""/>
        <renameInputValidator implementation="se.ch.HAnS.referencing.FeatureNameInputValidator"/>
        <!-- &end[Referencing] -->

        <!-- &begin[FileTemplate] -->
        <fileTemplateGroup implementation="se.ch.HAnS.actions.newFile.EFAFileTemplateManager"/>
        <!-- &end[FileTemplate] -->
        <!-- &begin[LiveTemplate] -->
        <defaultLiveTemplates file="/liveTemplates/EFA.xml"/>
        <liveTemplateContext implementation="se.ch.HAnS.codeCompletion.AnyContext" contextId="ANY"/>
        <liveTemplateContext implementation="se.ch.HAnS.codeCompletion.CommentContext" contextId="COMMENT"/>
        <!-- &end[LiveTemplate] -->
    </extensions>

    <actions>
        <action id="RenameFeature"
                class="se.ch.HAnS.actions.RenameAction"
                text="Rename..."
                description="Rename feature">
            <add-to-group group-id="StructureViewPopupMenu" anchor="first"/>
        </action>
        <action id="AddFeature"
                class="se.ch.HAnS.actions.AddAction"
                text="Add..." description="Add feature"
                icon="AllIcons.General.Add">
            <add-to-group group-id="StructureViewPopupMenu" anchor="after" relative-to-action="RenameFeature"/>
        </action>
        <action id="DeleteFeature"
                class="se.ch.HAnS.actions.DeleteAction"
                text="Delete..."
                description="Delete feature"
                icon="AllIcons.General.Remove">
            <add-to-group group-id="StructureViewPopupMenu" anchor="after" relative-to-action="AddFeature"/>
        </action>

        <!-- &begin[NewFile] -->
        <action id="CreateNewFileAction"
                class="se.ch.HAnS.actions.newFile.CreateNewFileAction" text="New EFA File"
                description="Create new feature mappings">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <!-- &end[NewFile] -->

        <action text="Surround with Feature Annotation" class="com.intellij.codeInsight.template.impl.actions.SurroundWithTemplateAction" use-shortcut-of="SurroundWithLiveTemplate" >
            <add-to-group
                    group-id="EditorPopupMenu" anchor="first" />
        </action>
    </actions>
    <application-components>
        <component>
            <implementation-class>se.ch.HAnS.timeTool.SessionTracker</implementation-class>
        </component>
    </application-components>
</idea-plugin>